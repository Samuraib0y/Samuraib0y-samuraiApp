{"ast":null,"code":"import { getAuth } from \"./login-reducer\";\nconst SET_INITIALIZED = 'SET_INITIALIZED';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: SET_INITIALIZED\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuth());\n  promise.then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["C:/Users/1/Desktop/Start/samurai/src/Redux/app-reducer.js"],"names":["getAuth","SET_INITIALIZED","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","then"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,iBAAtB;AAGA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAG;AADC,CAAnB;;AAMA,MAAMC,UAAU,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,eAAL;AACI,aAAM,EACF,GAAGI,KADD;AAEFF,QAAAA,WAAW,EAAE;AAFX,OAAN;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAaA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAEN;AAAP,CAAP,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAa;AAC5C,MAAIC,OAAO,GAAGD,QAAQ,CAACV,OAAO,EAAR,CAAtB;AAEAW,EAAAA,OAAO,CAACC,IAAR,CAAc,MAAM;AAChBF,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAFD;AAGH,CANM;AASP,eAAeJ,UAAf","sourcesContent":["import {getAuth} from \"./login-reducer\";\r\n\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized : false\r\n}\r\n\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return{\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED})\r\n\r\nexport const initializeApp = () => (dispatch) =>{\r\n    let promise = dispatch(getAuth())\r\n\r\n    promise.then( () => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}