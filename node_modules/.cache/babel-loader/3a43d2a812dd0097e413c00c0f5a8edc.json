{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\Start\\\\samurai\\\\src\\\\App-components\\\\Content\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, followThunk, getUsersThunkCreator, toggleProgressIsFollowing, unfollowThunk } from \"../../../Redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../../../Media/Preloader/Preloader\";\nimport { withAuthRedirect } from \"../../../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../../Redux/users-selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersAPI extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageN => {\n      this.props.getUsersThunkCreator(pageN, this.props.pageSize); // this.props.toggleIsFetching(false)\n      // this.props.setCurrentPage(pageN);\n      // usersAPI.getUsers(pageN, this.props.pageSize).then(response => {\n      //     this.props.toggleIsFetching(true)\n      //     this.props.setUsers(response.items)\n      // })\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize); // this.props.toggleIsFetching(false)\n    //\n    // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n    //     this.props.toggleIsFetching(true)\n    //     this.props.setUsers(response.items)\n    //     this.props.setTotalCount(response.totalCount)\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? null : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.props.users,\n        onPageChanged: this.onPageChanged,\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        followingProgress: this.props.followingProgress,\n        currentPage: this.props.currentPage,\n        followThunk: this.props.followThunk,\n        unfollowThunk: this.props.unfollowThunk\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingProgress: getFollowingProgress(state)\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (page) => {\n//             dispatch(setCurrentPageAC(page))\n//         },\n//         setTotalCount: (count) => {\n//             dispatch(setTotalCountAC(count))\n//         },\n//         toggleIsFetching: (isFetch) => {\n//             dispatch(toggleIsFetchingAC(isFetch))\n//         }\n//     }\n// }\n// const UsersContainer = connect(mapStateToProps, {follow,\n//     toggleProgressIsFollowing,\n//     unfollowThunk,\n//     followThunk,\n//     getUsersThunkCreator,\n//     })(UsersAPI)\n// export default UsersContainer;\n\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  toggleProgressIsFollowing,\n  unfollowThunk,\n  followThunk,\n  getUsersThunkCreator\n}))(UsersAPI);","map":{"version":3,"sources":["C:/Users/1/Desktop/Start/samurai/src/App-components/Content/Users/UsersContainer.jsx"],"names":["React","connect","follow","followThunk","getUsersThunkCreator","toggleProgressIsFollowing","unfollowThunk","Users","Preloader","withAuthRedirect","compose","getCurrentPage","getFollowingProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","UsersAPI","Component","onPageChanged","pageN","props","pageSize","componentDidMount","currentPage","render","isFetching","users","totalUsersCount","followingProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EACYC,WADZ,EACyBC,oBADzB,EAEIC,yBAFJ,EAGKC,aAHL,QAIO,8BAJP;AAKA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,oBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,kBALJ,EAMIC,QANJ,QAOO,gCAPP;;;;AAUA,MAAMC,QAAN,SAAuBjB,KAAK,CAACkB,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAkBnCC,aAlBmC,GAkBlBC,KAAD,IAAW;AAEvB,WAAKC,KAAL,CAAWjB,oBAAX,CAAgCgB,KAAhC,EAAuC,KAAKC,KAAL,CAAWC,QAAlD,EAFuB,CAIvB;AACA;AACA;AACA;AACA;AACA;AACH,KA5BkC;AAAA;;AAEnCC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKF,KAAL,CAAWjB,oBAAX,CAAgC,KAAKiB,KAAL,CAAWG,WAA3C,EAAwD,KAAKH,KAAL,CAAWC,QAAnE,EAFgB,CAMhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAeDG,EAAAA,MAAM,GAAG;AAGL,wBAAO;AAAA,iBACF,KAAKJ,KAAL,CAAWK,UAAX,GAAyB,IAAzB,gBAAgC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAD9B,eAIH,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,KAAzB;AAAgC,QAAA,aAAa,EAAE,KAAKR,aAApD;AACO,QAAA,eAAe,EAAE,KAAKE,KAAL,CAAWO,eADnC;AACoD,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWC,QADzE;AAEO,QAAA,iBAAiB,EAAE,KAAKD,KAAL,CAAWQ,iBAFrC;AAGO,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWG,WAH/B;AAIO,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWlB,WAJ/B;AAI4C,QAAA,aAAa,EAAE,KAAKkB,KAAL,CAAWf;AAJtE;AAAA;AAAA;AAAA;AAAA,cAJG;AAAA,oBAAP;AAWH;;AA7CkC;;AAiDvC,IAAIwB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHJ,IAAAA,KAAK,EAAEX,QAAQ,CAACe,KAAD,CADZ;AAEHT,IAAAA,QAAQ,EAAER,WAAW,CAACiB,KAAD,CAFlB;AAGHH,IAAAA,eAAe,EAAEb,kBAAkB,CAACgB,KAAD,CAHhC;AAIHP,IAAAA,WAAW,EAAEb,cAAc,CAACoB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEb,aAAa,CAACkB,KAAD,CALtB;AAMHF,IAAAA,iBAAiB,EAAEjB,oBAAoB,CAACmB,KAAD;AANpC,GAAP;AAQH,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAGA,eAAerB,OAAO,CAACT,OAAO,CAAC6B,eAAD,EAAkB;AAAC5B,EAAAA,MAAD;AAC5CG,EAAAA,yBAD4C;AAE5CC,EAAAA,aAF4C;AAG5CH,EAAAA,WAH4C;AAI5CC,EAAAA;AAJ4C,CAAlB,CAAR,CAAP,CAKXa,QALW,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followThunk, getUsersThunkCreator,\r\n    toggleProgressIsFollowing,\r\n     unfollowThunk\r\n} from \"../../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../../Media/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../Redux/users-selectors\";\r\n\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n\r\n\r\n\r\n        // this.props.toggleIsFetching(false)\r\n        //\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\r\n        //     this.props.toggleIsFetching(true)\r\n        //     this.props.setUsers(response.items)\r\n        //     this.props.setTotalCount(response.totalCount)\r\n        // })\r\n\r\n    }\r\n\r\n    onPageChanged = (pageN) => {\r\n\r\n        this.props.getUsersThunkCreator(pageN, this.props.pageSize)\r\n\r\n        // this.props.toggleIsFetching(false)\r\n        // this.props.setCurrentPage(pageN);\r\n        // usersAPI.getUsers(pageN, this.props.pageSize).then(response => {\r\n        //     this.props.toggleIsFetching(true)\r\n        //     this.props.setUsers(response.items)\r\n        // })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ?  null : <Preloader/>}\r\n\r\n\r\n            <Users users={this.props.users} onPageChanged={this.onPageChanged}\r\n                   totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                   followingProgress={this.props.followingProgress}\r\n                   currentPage={this.props.currentPage}\r\n                   followThunk={this.props.followThunk} unfollowThunk={this.props.unfollowThunk}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (page) => {\r\n//             dispatch(setCurrentPageAC(page))\r\n//         },\r\n//         setTotalCount: (count) => {\r\n//             dispatch(setTotalCountAC(count))\r\n\r\n\r\n//         },\r\n//         toggleIsFetching: (isFetch) => {\r\n//             dispatch(toggleIsFetchingAC(isFetch))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// const UsersContainer = connect(mapStateToProps, {follow,\r\n//     toggleProgressIsFollowing,\r\n//     unfollowThunk,\r\n//     followThunk,\r\n//     getUsersThunkCreator,\r\n//     })(UsersAPI)\r\n\r\n\r\n// export default UsersContainer;\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {follow,\r\n    toggleProgressIsFollowing,\r\n    unfollowThunk,\r\n    followThunk,\r\n    getUsersThunkCreator,\r\n}))(UsersAPI)"]},"metadata":{},"sourceType":"module"}