{"ast":null,"code":"import React from \"react\";\nimport { addMessageAC } from \"../../../../../Redux/dialogs-reducer\";\nimport NewMessage from \"./newMessage\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  return {\n    messageBody: state.dialogReducer.messageBody\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: newMessageBody => {\n      dispatch(addMessageAC(newMessageBody));\n    }\n  };\n};\n\nconst NewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(NewMessage); // let messageBodyOnchange = (newText) => {\n//     props.dispatch(updateMessageBodyAC(newText))\n// }\n//\n// let sendMessage = () => {\n//     props.dispatch(addMessageAC())\n// }\n//\n// return (<NewMessage messageBodyOnchange={messageBodyOnchange}\n//                     messageBody={props.messageBody} sendMessage={sendMessage}\n//     />)\n\nexport default NewMessageContainer;","map":{"version":3,"sources":["C:/Users/1/Desktop/gittest/samuraiApp/src/App-components/Content/Dialogs/DialogItems/newMessage/newMessageContainer.jsx"],"names":["React","addMessageAC","NewMessage","connect","mapStateToProps","state","messageBody","dialogReducer","mapDispatchToProps","dispatch","sendMessage","newMessageBody","NewMessageContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,sCAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAKA,IAAIC,eAAe,GAAIC,KAAD,IAAU;AAC5B,SAAM;AACFC,IAAAA,WAAW,EAAED,KAAK,CAACE,aAAN,CAAoBD;AAD/B,GAAN;AAGH,CAJD;;AAMA,IAAIE,kBAAkB,GAAIC,QAAD,IAAa;AAClC,SAAM;AACFC,IAAAA,WAAW,EAAGC,cAAD,IAAmB;AAC5BF,MAAAA,QAAQ,CAACR,YAAY,CAACU,cAAD,CAAb,CAAR;AACH;AAHC,GAAN;AAKH,CAND;;AAYA,MAAMC,mBAAmB,GAAGT,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA8CN,UAA9C,CAA5B,C,CAKI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOJ,eAAeU,mBAAf","sourcesContent":["import React from \"react\";\r\nimport {addMessageAC} from \"../../../../../Redux/dialogs-reducer\";\r\nimport NewMessage from \"./newMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        messageBody: state.dialogReducer.messageBody\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        sendMessage: (newMessageBody) =>{\r\n            dispatch(addMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst NewMessageContainer = connect(mapStateToProps, mapDispatchToProps) (NewMessage);\r\n\r\n\r\n\r\n\r\n    // let messageBodyOnchange = (newText) => {\r\n    //     props.dispatch(updateMessageBodyAC(newText))\r\n    // }\r\n    //\r\n    // let sendMessage = () => {\r\n    //     props.dispatch(addMessageAC())\r\n    // }\r\n    //\r\n    // return (<NewMessage messageBodyOnchange={messageBodyOnchange}\r\n    //                     messageBody={props.messageBody} sendMessage={sendMessage}\r\n    //     />)\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default NewMessageContainer;"]},"metadata":{},"sourceType":"module"}