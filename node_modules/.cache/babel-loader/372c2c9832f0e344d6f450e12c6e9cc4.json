{"ast":null,"code":"const ADD_MESSAGE = 'ADD_MESSAGE';\nlet initialState = {\n  dialogUsers: [{\n    name: 'Sasha',\n    id: 12\n  }, {\n    name: 'Igor',\n    id: 13\n  }, {\n    name: 'Roma',\n    id: 24\n  }, {\n    name: 'Natasha',\n    id: 125\n  }],\n  messageText: [{\n    id: 12,\n    text: 'Привет, как дела че делаешь?'\n  }, {\n    id: 13,\n    text: 'Вуай бля, подкинули'\n  }, {\n    id: 24,\n    text: 'Я дракон! Как так? Она голая, контакт'\n  }, {\n    id: 125,\n    text: 'Хочу с тобой заняться сексом диким'\n  }]\n}; //\n// const dialogReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case ADD_MESSAGE: {\n//             let newMessageMember = {\n//                 name: \"You\",\n//                 id: 231,\n//             }\n//             let stateShadow = {...state};\n//             stateShadow.dialogUsers = [...state.dialogUsers]\n//             stateShadow.messageText = [...state.messageText]\n//             stateShadow.dialogUsers.push(newMessageMember);\n//             let newMessageBody = {\n//                 id: 231,\n//                 text: stateShadow.messageBody\n//             }\n//             stateShadow.messageText.push(newMessageBody)\n//             stateShadow.messageBody = '';\n//             return stateShadow\n//         }\n//         case UPDATE_MESSAGE_BODY:{\n//             let stateShadow = {...state}\n//             stateShadow.messageBody = action.newText\n//             return stateShadow\n//         }\n//         default:\n//             return state\n//     }\n// }\n\nconst dialogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        let newMessageMember = {\n          name: \"You\",\n          id: 231\n        };\n        let newMessageBody = {\n          id: 231,\n          text: action.newMessageBody\n        };\n        return { ...state,\n          dialogUsers: [...state.dialogUsers, newMessageMember],\n          messageText: [...state.messageText, newMessageBody]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addMessageAC = newMessageBody => ({\n  type: ADD_MESSAGE,\n  newMessageBody\n});\nexport default dialogReducer;","map":{"version":3,"sources":["C:/Users/1/Desktop/Start/samurai/src/Redux/dialogs-reducer.js"],"names":["ADD_MESSAGE","initialState","dialogUsers","name","id","messageText","text","dialogReducer","state","action","type","newMessageMember","newMessageBody","addMessageAC"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE,CACT;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,EAAE,EAAE;AAApB,GADS,EACgB;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,EAAE,EAAE;AAAnB,GADhB,EAET;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,EAAE,EAAE;AAAnB,GAFS,EAEe;AAACD,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,EAAE,EAAE;AAAtB,GAFf,CADE;AAKfC,EAAAA,WAAW,EAAE,CACT;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASE,IAAAA,IAAI,EAAE;AAAf,GADS,EAET;AAACF,IAAAA,EAAE,EAAE,EAAL;AAASE,IAAAA,IAAI,EAAE;AAAf,GAFS,EAGT;AAACF,IAAAA,EAAE,EAAE,EAAL;AAASE,IAAAA,IAAI,EAAE;AAAf,GAHS,EAIT;AAACF,IAAAA,EAAE,EAAE,GAAL;AAAUE,IAAAA,IAAI,EAAE;AAAhB,GAJS;AALE,CAAnB,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,aAAa,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAL;AAAkB;AACd,YAAIW,gBAAgB,GAAG;AACnBR,UAAAA,IAAI,EAAE,KADa;AAEnBC,UAAAA,EAAE,EAAE;AAFe,SAAvB;AAIA,YAAIQ,cAAc,GAAG;AACjBR,UAAAA,EAAE,EAAE,GADa;AAEjBE,UAAAA,IAAI,EAAEG,MAAM,CAACG;AAFI,SAArB;AAIA,eAAO,EACH,GAAGJ,KADA;AAEHN,UAAAA,WAAW,EAAE,CAAC,GAAGM,KAAK,CAACN,WAAV,EAAuBS,gBAAvB,CAFV;AAGHN,UAAAA,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACH,WAAV,EAAuBO,cAAvB;AAHV,SAAP;AAKH;;AACD;AACI,aAAOJ,KAAP;AAjBR;AAmBH,CApBD;;AAuBA,OAAO,MAAMK,YAAY,GAAID,cAAD,KAAqB;AAACF,EAAAA,IAAI,EAAEV,WAAP;AAAoBY,EAAAA;AAApB,CAArB,CAArB;AAEP,eAAeL,aAAf","sourcesContent":["const ADD_MESSAGE = 'ADD_MESSAGE'\r\n\r\n\r\nlet initialState = {\r\n    dialogUsers: [\r\n        {name: 'Sasha', id: 12}, {name: 'Igor', id: 13},\r\n        {name: 'Roma', id: 24}, {name: 'Natasha', id: 125}\r\n    ],\r\n    messageText: [\r\n        {id: 12, text: 'Привет, как дела че делаешь?'},\r\n        {id: 13, text: 'Вуай бля, подкинули'},\r\n        {id: 24, text: 'Я дракон! Как так? Она голая, контакт'},\r\n        {id: 125, text: 'Хочу с тобой заняться сексом диким'}\r\n    ]\r\n}\r\n\r\n\r\n//\r\n// const dialogReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case ADD_MESSAGE: {\r\n//             let newMessageMember = {\r\n//                 name: \"You\",\r\n//                 id: 231,\r\n//             }\r\n//             let stateShadow = {...state};\r\n//             stateShadow.dialogUsers = [...state.dialogUsers]\r\n//             stateShadow.messageText = [...state.messageText]\r\n//             stateShadow.dialogUsers.push(newMessageMember);\r\n//             let newMessageBody = {\r\n//                 id: 231,\r\n//                 text: stateShadow.messageBody\r\n//             }\r\n//             stateShadow.messageText.push(newMessageBody)\r\n//             stateShadow.messageBody = '';\r\n//             return stateShadow\r\n//         }\r\n//         case UPDATE_MESSAGE_BODY:{\r\n//             let stateShadow = {...state}\r\n//             stateShadow.messageBody = action.newText\r\n//             return stateShadow\r\n//         }\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessageMember = {\r\n                name: \"You\",\r\n                id: 231,\r\n            }\r\n            let newMessageBody = {\r\n                id: 231,\r\n                text: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogUsers: [...state.dialogUsers, newMessageMember],\r\n                messageText: [...state.messageText, newMessageBody]\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addMessageAC = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\nexport default dialogReducer;"]},"metadata":{},"sourceType":"module"}