{"ast":null,"code":"import _classCallCheck from\"C:/Users/1/Desktop/Start/samurai/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/1/Desktop/Start/samurai/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/1/Desktop/Start/samurai/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/1/Desktop/Start/samurai/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import{connect}from\"react-redux\";import{follow,followThunk,getUsersThunkCreator,toggleProgressIsFollowing,unfollowThunk}from\"../../../Redux/users-reducer\";import Users from\"./Users\";import Preloader from\"../../../Media/Preloader/Preloader\";import{withAuthRedirect}from\"../../../HOC/withAuthRedirect\";import{compose}from\"redux\";import{getCurrentPage,getFollowingProgress,getIsFetching,getPageSize,getTotalUsersCount,getUsers}from\"../../../Redux/users-selectors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UsersAPI=/*#__PURE__*/function(_React$Component){_inherits(UsersAPI,_React$Component);var _super=_createSuper(UsersAPI);function UsersAPI(){var _this;_classCallCheck(this,UsersAPI);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onPageChanged=function(pageN){_this.props.getUsersThunkCreator(pageN,_this.props.pageSize);// this.props.toggleIsFetching(false)\n// this.props.setCurrentPage(pageN);\n// usersAPI.getUsers(pageN, this.props.pageSize).then(response => {\n//     this.props.toggleIsFetching(true)\n//     this.props.setUsers(response.items)\n// })\n};return _this;}_createClass(UsersAPI,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize);// this.props.toggleIsFetching(false)\n//\n// usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\n//     this.props.toggleIsFetching(true)\n//     this.props.setUsers(response.items)\n//     this.props.setTotalCount(response.totalCount)\n// })\n}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[this.props.isFetching?null:/*#__PURE__*/_jsx(Preloader,{}),/*#__PURE__*/_jsx(Users,{users:this.props.users,onPageChanged:this.onPageChanged,totalUsersCount:this.props.totalUsersCount,pageSize:this.props.pageSize,followingProgress:this.props.followingProgress,currentPage:this.props.currentPage,followThunk:this.props.followThunk,unfollowThunk:this.props.unfollowThunk})]});}}]);return UsersAPI;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{users:getUsers(state),pageSize:getPageSize(state),totalUsersCount:getTotalUsersCount(state),currentPage:getCurrentPage(state),isFetching:getIsFetching(state),followingProgress:getFollowingProgress(state)};};// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (page) => {\n//             dispatch(setCurrentPageAC(page))\n//         },\n//         setTotalCount: (count) => {\n//             dispatch(setTotalCountAC(count))\n//         },\n//         toggleIsFetching: (isFetch) => {\n//             dispatch(toggleIsFetchingAC(isFetch))\n//         }\n//     }\n// }\n// const UsersContainer = connect(mapStateToProps, {follow,\n//     toggleProgressIsFollowing,\n//     unfollowThunk,\n//     followThunk,\n//     getUsersThunkCreator,\n//     })(UsersAPI)\n// export default UsersContainer;\nexport default compose(connect(mapStateToProps,{follow:follow,toggleProgressIsFollowing:toggleProgressIsFollowing,unfollowThunk:unfollowThunk,followThunk:followThunk,getUsersThunkCreator:getUsersThunkCreator}))(UsersAPI);","map":{"version":3,"sources":["C:/Users/1/Desktop/Start/samurai/src/App-components/Content/Users/UsersContainer.jsx"],"names":["React","connect","follow","followThunk","getUsersThunkCreator","toggleProgressIsFollowing","unfollowThunk","Users","Preloader","withAuthRedirect","compose","getCurrentPage","getFollowingProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","UsersAPI","onPageChanged","pageN","props","pageSize","currentPage","isFetching","users","totalUsersCount","followingProgress","Component","mapStateToProps","state"],"mappings":"wcAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OACIC,MADJ,CACYC,WADZ,CACyBC,oBADzB,CAEIC,yBAFJ,CAGKC,aAHL,KAIO,8BAJP,CAKA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,OAAQC,gBAAR,KAA+B,+BAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CACA,OACIC,cADJ,CAEIC,oBAFJ,CAGIC,aAHJ,CAIIC,WAJJ,CAKIC,kBALJ,CAMIC,QANJ,KAOO,gCAPP,C,gJAUMC,CAAAA,Q,+UAkBFC,a,CAAgB,SAACC,KAAD,CAAW,CAEvB,MAAKC,KAAL,CAAWhB,oBAAX,CAAgCe,KAAhC,CAAuC,MAAKC,KAAL,CAAWC,QAAlD,EAEA;AACA;AACA;AACA;AACA;AACA;AACH,C,qEA1BD,4BAAoB,CAEhB,KAAKD,KAAL,CAAWhB,oBAAX,CAAgC,KAAKgB,KAAL,CAAWE,WAA3C,CAAwD,KAAKF,KAAL,CAAWC,QAAnE,EAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,C,sBAeD,iBAAS,CAGL,mBAAO,2BACF,KAAKD,KAAL,CAAWG,UAAX,CAAyB,IAAzB,cAAgC,KAAC,SAAD,IAD9B,cAIH,KAAC,KAAD,EAAO,KAAK,CAAE,KAAKH,KAAL,CAAWI,KAAzB,CAAgC,aAAa,CAAE,KAAKN,aAApD,CACO,eAAe,CAAE,KAAKE,KAAL,CAAWK,eADnC,CACoD,QAAQ,CAAE,KAAKL,KAAL,CAAWC,QADzE,CAEO,iBAAiB,CAAE,KAAKD,KAAL,CAAWM,iBAFrC,CAGO,WAAW,CAAE,KAAKN,KAAL,CAAWE,WAH/B,CAIO,WAAW,CAAE,KAAKF,KAAL,CAAWjB,WAJ/B,CAI4C,aAAa,CAAE,KAAKiB,KAAL,CAAWd,aAJtE,EAJG,GAAP,CAWH,C,sBA7CkBN,KAAK,CAAC2B,S,EAiD7B,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHL,KAAK,CAAER,QAAQ,CAACa,KAAD,CADZ,CAEHR,QAAQ,CAAEP,WAAW,CAACe,KAAD,CAFlB,CAGHJ,eAAe,CAAEV,kBAAkB,CAACc,KAAD,CAHhC,CAIHP,WAAW,CAAEX,cAAc,CAACkB,KAAD,CAJxB,CAKHN,UAAU,CAAEV,aAAa,CAACgB,KAAD,CALtB,CAMHH,iBAAiB,CAAEd,oBAAoB,CAACiB,KAAD,CANpC,CAAP,CAQH,CATD,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA,cAAenB,CAAAA,OAAO,CAACT,OAAO,CAAC2B,eAAD,CAAkB,CAAC1B,MAAM,CAANA,MAAD,CAC5CG,yBAAyB,CAAzBA,yBAD4C,CAE5CC,aAAa,CAAbA,aAF4C,CAG5CH,WAAW,CAAXA,WAH4C,CAI5CC,oBAAoB,CAApBA,oBAJ4C,CAAlB,CAAR,CAAP,CAKXa,QALW,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followThunk, getUsersThunkCreator,\r\n    toggleProgressIsFollowing,\r\n     unfollowThunk\r\n} from \"../../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../../../Media/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../Redux/users-selectors\";\r\n\r\n\r\nclass UsersAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n\r\n\r\n\r\n        // this.props.toggleIsFetching(false)\r\n        //\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(response => {\r\n        //     this.props.toggleIsFetching(true)\r\n        //     this.props.setUsers(response.items)\r\n        //     this.props.setTotalCount(response.totalCount)\r\n        // })\r\n\r\n    }\r\n\r\n    onPageChanged = (pageN) => {\r\n\r\n        this.props.getUsersThunkCreator(pageN, this.props.pageSize)\r\n\r\n        // this.props.toggleIsFetching(false)\r\n        // this.props.setCurrentPage(pageN);\r\n        // usersAPI.getUsers(pageN, this.props.pageSize).then(response => {\r\n        //     this.props.toggleIsFetching(true)\r\n        //     this.props.setUsers(response.items)\r\n        // })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return <>\r\n            {this.props.isFetching ?  null : <Preloader/>}\r\n\r\n\r\n            <Users users={this.props.users} onPageChanged={this.onPageChanged}\r\n                   totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                   followingProgress={this.props.followingProgress}\r\n                   currentPage={this.props.currentPage}\r\n                   followThunk={this.props.followThunk} unfollowThunk={this.props.unfollowThunk}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (page) => {\r\n//             dispatch(setCurrentPageAC(page))\r\n//         },\r\n//         setTotalCount: (count) => {\r\n//             dispatch(setTotalCountAC(count))\r\n\r\n\r\n//         },\r\n//         toggleIsFetching: (isFetch) => {\r\n//             dispatch(toggleIsFetchingAC(isFetch))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// const UsersContainer = connect(mapStateToProps, {follow,\r\n//     toggleProgressIsFollowing,\r\n//     unfollowThunk,\r\n//     followThunk,\r\n//     getUsersThunkCreator,\r\n//     })(UsersAPI)\r\n\r\n\r\n// export default UsersContainer;\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {follow,\r\n    toggleProgressIsFollowing,\r\n    unfollowThunk,\r\n    followThunk,\r\n    getUsersThunkCreator,\r\n}))(UsersAPI)"]},"metadata":{},"sourceType":"module"}