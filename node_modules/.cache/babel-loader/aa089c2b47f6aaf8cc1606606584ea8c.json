{"ast":null,"code":"import _toConsumableArray from\"C:/Users/1/Desktop/Start/samurai/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/1/Desktop/Start/samurai/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var ADD_MESSAGE='ADD_MESSAGE';var initialState={dialogUsers:[{name:'Sasha',id:12},{name:'Igor',id:13},{name:'Roma',id:24},{name:'Natasha',id:125}],messageText:[{id:12,text:'Привет, как дела че делаешь?'},{id:13,text:'Вуай бля, подкинули'},{id:24,text:'Я дракон! Как так? Она голая, контакт'},{id:125,text:'Хочу с тобой заняться сексом диким'}]};//\n// const dialogReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case ADD_MESSAGE: {\n//             let newMessageMember = {\n//                 name: \"You\",\n//                 id: 231,\n//             }\n//             let stateShadow = {...state};\n//             stateShadow.dialogUsers = [...state.dialogUsers]\n//             stateShadow.messageText = [...state.messageText]\n//             stateShadow.dialogUsers.push(newMessageMember);\n//             let newMessageBody = {\n//                 id: 231,\n//                 text: stateShadow.messageBody\n//             }\n//             stateShadow.messageText.push(newMessageBody)\n//             stateShadow.messageBody = '';\n//             return stateShadow\n//         }\n//         case UPDATE_MESSAGE_BODY:{\n//             let stateShadow = {...state}\n//             stateShadow.messageBody = action.newText\n//             return stateShadow\n//         }\n//         default:\n//             return state\n//     }\n// }\nvar dialogReducer=function dialogReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_MESSAGE:{var newMessageMember={name:\"You\",id:231};var newMessageBody={id:231,text:action.newMessageBody};return _objectSpread(_objectSpread({},state),{},{dialogUsers:[].concat(_toConsumableArray(state.dialogUsers),[newMessageMember]),messageText:[].concat(_toConsumableArray(state.messageText),[newMessageBody])});}default:return state;}};export var addMessageAC=function addMessageAC(newMessageBody){return{type:ADD_MESSAGE,newMessageBody:newMessageBody};};export default dialogReducer;","map":{"version":3,"sources":["C:/Users/1/Desktop/Start/samurai/src/Redux/dialogs-reducer.js"],"names":["ADD_MESSAGE","initialState","dialogUsers","name","id","messageText","text","dialogReducer","state","action","type","newMessageMember","newMessageBody","addMessageAC"],"mappings":"mPAAA,GAAMA,CAAAA,WAAW,CAAG,aAApB,CAGA,GAAIC,CAAAA,YAAY,CAAG,CACfC,WAAW,CAAE,CACT,CAACC,IAAI,CAAE,OAAP,CAAgBC,EAAE,CAAE,EAApB,CADS,CACgB,CAACD,IAAI,CAAE,MAAP,CAAeC,EAAE,CAAE,EAAnB,CADhB,CAET,CAACD,IAAI,CAAE,MAAP,CAAeC,EAAE,CAAE,EAAnB,CAFS,CAEe,CAACD,IAAI,CAAE,SAAP,CAAkBC,EAAE,CAAE,GAAtB,CAFf,CADE,CAKfC,WAAW,CAAE,CACT,CAACD,EAAE,CAAE,EAAL,CAASE,IAAI,CAAE,8BAAf,CADS,CAET,CAACF,EAAE,CAAE,EAAL,CAASE,IAAI,CAAE,qBAAf,CAFS,CAGT,CAACF,EAAE,CAAE,EAAL,CAASE,IAAI,CAAE,uCAAf,CAHS,CAIT,CAACF,EAAE,CAAE,GAAL,CAAUE,IAAI,CAAE,oCAAhB,CAJS,CALE,CAAnB,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBP,YAAyB,IAAXQ,CAAAA,MAAW,2CACpD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKV,CAAAA,WAAL,CAAkB,CACd,GAAIW,CAAAA,gBAAgB,CAAG,CACnBR,IAAI,CAAE,KADa,CAEnBC,EAAE,CAAE,GAFe,CAAvB,CAIA,GAAIQ,CAAAA,cAAc,CAAG,CACjBR,EAAE,CAAE,GADa,CAEjBE,IAAI,CAAEG,MAAM,CAACG,cAFI,CAArB,CAIA,sCACOJ,KADP,MAEIN,WAAW,8BAAMM,KAAK,CAACN,WAAZ,GAAyBS,gBAAzB,EAFf,CAGIN,WAAW,8BAAMG,KAAK,CAACH,WAAZ,GAAyBO,cAAzB,EAHf,GAKH,CACD,QACI,MAAOJ,CAAAA,KAAP,CAjBR,CAmBH,CApBD,CAuBA,MAAO,IAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,cAAD,QAAqB,CAACF,IAAI,CAAEV,WAAP,CAAoBY,cAAc,CAAdA,cAApB,CAArB,EAArB,CAEP,cAAeL,CAAAA,aAAf","sourcesContent":["const ADD_MESSAGE = 'ADD_MESSAGE'\r\n\r\n\r\nlet initialState = {\r\n    dialogUsers: [\r\n        {name: 'Sasha', id: 12}, {name: 'Igor', id: 13},\r\n        {name: 'Roma', id: 24}, {name: 'Natasha', id: 125}\r\n    ],\r\n    messageText: [\r\n        {id: 12, text: 'Привет, как дела че делаешь?'},\r\n        {id: 13, text: 'Вуай бля, подкинули'},\r\n        {id: 24, text: 'Я дракон! Как так? Она голая, контакт'},\r\n        {id: 125, text: 'Хочу с тобой заняться сексом диким'}\r\n    ]\r\n}\r\n\r\n\r\n//\r\n// const dialogReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case ADD_MESSAGE: {\r\n//             let newMessageMember = {\r\n//                 name: \"You\",\r\n//                 id: 231,\r\n//             }\r\n//             let stateShadow = {...state};\r\n//             stateShadow.dialogUsers = [...state.dialogUsers]\r\n//             stateShadow.messageText = [...state.messageText]\r\n//             stateShadow.dialogUsers.push(newMessageMember);\r\n//             let newMessageBody = {\r\n//                 id: 231,\r\n//                 text: stateShadow.messageBody\r\n//             }\r\n//             stateShadow.messageText.push(newMessageBody)\r\n//             stateShadow.messageBody = '';\r\n//             return stateShadow\r\n//         }\r\n//         case UPDATE_MESSAGE_BODY:{\r\n//             let stateShadow = {...state}\r\n//             stateShadow.messageBody = action.newText\r\n//             return stateShadow\r\n//         }\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessageMember = {\r\n                name: \"You\",\r\n                id: 231,\r\n            }\r\n            let newMessageBody = {\r\n                id: 231,\r\n                text: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogUsers: [...state.dialogUsers, newMessageMember],\r\n                messageText: [...state.messageText, newMessageBody]\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addMessageAC = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\nexport default dialogReducer;"]},"metadata":{},"sourceType":"module"}