{"version":3,"file":"static/js/866.eca546dc.chunk.js","mappings":"kNACA,GAAgB,QAAU,yBAAyB,WAAa,6B,UCAhE,EAA8B,iC,SCgB9B,EAboB,SAACA,GAEjB,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASC,GAAI,UAAYH,EAAMI,GAA/B,SACMJ,EAAMK,UCRxB,EAAiC,uCCajC,EAVuB,SAACL,GAEpB,OACI,gBAAKC,UAAWK,EAAhB,SACMN,EAAMO,Q,iDCFhBC,GAAaC,EAAAA,EAAAA,GAAiB,IA8C5BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACX,GACpB,OACI,kBAAMa,SAAUb,EAAMc,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAASX,GAAaH,KAAK,iBAAiBe,YAAY,qBAEnG,0BACI,sDAQhB,EA7CmB,SAACpB,GAkBhB,OACI,0BACI,SAACU,EAAD,CAAqBG,SANlB,SAACQ,GACRrB,EAAMsB,YAAYD,EAAOE,sBCwBjC,GAtB4BC,EAAAA,EAAAA,KAlBN,SAACC,GACnB,MAAM,CACFC,YAAaD,EAAME,cAAcD,gBAIhB,SAACE,GACtB,MAAM,CACFN,YAAa,SAACC,GACVK,GAASC,EAAAA,EAAAA,GAAaN,QASNC,CAA8CM,GCnBpEC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAsBD,OAtBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACF,WAEI,IAAIC,EACAC,KAAKjC,MAAMkC,WAAWC,YAAYC,KAAI,SAAAC,GAAC,OAAK,SAAC,EAAD,CAAahC,KAAMgC,EAAEhC,KAAMD,GAAIiC,EAAEjC,QAG7EkC,EACAL,KAAKjC,MAAMkC,WAAWK,YAAYH,KAAI,SAAAI,GAAC,OAAK,SAAC,EAAD,CAAgBpC,GAAIoC,EAAEpC,GAAIG,KAAMiC,EAAEjC,UAGlF,OACI,iBAAKN,UAAWwC,EAAAA,QAAhB,WACI,iBAAKxC,UAAWwC,EAAAA,GAAhB,UACKT,GACD,SAAC,EAAD,QAEJ,gBAAK/B,UAAWwC,EAAAA,GAAhB,SACKH,WAIhB,EAtBCP,CAAgBW,EAAAA,WAsDtB,I,UCrCA,GAAeC,E,QAAAA,KAASnB,EAAAA,EAAAA,KAjBF,SAACC,GACnB,MAAM,CACFS,WAAYT,EAAME,kBAID,SAACC,GACtB,MAAM,MAU6DgB,EAAAA,EAAvE,CAAyFb","sources":["webpack://samurai/./src/App-components/Content/Dialogs/Dialogs.module.css?3ec6","webpack://samurai/./src/App-components/Content/Dialogs/DialogItems/DialogItems.module.css?16fc","App-components/Content/Dialogs/DialogItems/DialogItems.jsx","webpack://samurai/./src/App-components/Content/Dialogs/DialogItems/DialogsMessage.module.css?4e05","App-components/Content/Dialogs/DialogItems/DialogsMessage.jsx","App-components/Content/Dialogs/DialogItems/newMessage/newMessage.jsx","App-components/Content/Dialogs/DialogItems/newMessage/newMessageContainer.jsx","App-components/Content/Dialogs/Dialogs.jsx","App-components/Content/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__FFekX\",\"dialogUser\":\"Dialogs_dialogUser__WrgyQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogUsers\":\"DialogItems_dialogUsers__IgIPo\"};","import React from \"react\";\r\nimport { NavLink} from \"react-router-dom\";\r\nimport d2 from './DialogItems.module.css'\r\n\r\nconst DialogItems = (props) => {\r\n\r\n    return(\r\n        <div className={d2.dialogUsers}>\r\n            <NavLink to={'/dialog' + props.id}>\r\n                { props.name }\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItems;","// extracted by mini-css-extract-plugin\nexport default {\"dialogsMessage\":\"DialogsMessage_dialogsMessage__79vNI\"};","import React from \"react\";\r\nimport dm from './DialogsMessage.module.css'\r\n\r\n\r\nconst DialogsMessage = (props) => {\r\n\r\n    return (\r\n        <div className={dm.dialogsMessage}>\r\n            { props.text }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogsMessage;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../Utils/validation/validator\";\r\nimport {Textarea} from \"../../../../../Media/FormControls/FormControls\";\r\n\r\n\r\nlet maxLength =  maxLengthCreator(15)\r\n\r\n\r\nconst NewMessage = (props) => {\r\n\r\n    // let newMessageElement = React.createRef();\r\n    //\r\n    //\r\n    // let messageBodyOnchange = () => {\r\n    //     let newText = newMessageElement.current.value;\r\n    //     props.messageBodyOnchange(newText)\r\n    // }\r\n    //\r\n    // let sendMessage = () => {\r\n    //     props.sendMessage()\r\n    // }\r\n\r\n    let addM = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AddMessageFormRedux onSubmit={addM} />\r\n            {/*<textarea onChange={messageBodyOnchange} ref={newMessageElement}*/}\r\n            {/*          value={props.messageBody}*/}\r\n            {/*/>*/}\r\n            {/*<button onClick={sendMessage}> Send Message</button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required,maxLength ]} name='newMessageBody' placeholder='Write message'/>\r\n            </div>\r\n            <div>\r\n                <button> Send Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default NewMessage;","import React from \"react\";\r\nimport {addMessageAC} from \"../../../../../Redux/dialogs-reducer\";\r\nimport NewMessage from \"./newMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        messageBody: state.dialogReducer.messageBody\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        sendMessage: (newMessageBody) =>{\r\n            dispatch(addMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst NewMessageContainer = connect(mapStateToProps, mapDispatchToProps) (NewMessage);\r\n\r\n\r\n\r\n\r\n    // let messageBodyOnchange = (newText) => {\r\n    //     props.dispatch(updateMessageBodyAC(newText))\r\n    // }\r\n    //\r\n    // let sendMessage = () => {\r\n    //     props.dispatch(addMessageAC())\r\n    // }\r\n    //\r\n    // return (<NewMessage messageBodyOnchange={messageBodyOnchange}\r\n    //                     messageBody={props.messageBody} sendMessage={sendMessage}\r\n    //     />)\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default NewMessageContainer;","import React from \"react\";\r\nimport d from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport DialogsMessage from \"./DialogItems/DialogsMessage\";\r\nimport NewMessageContainer from \"./DialogItems/newMessage/newMessageContainer\";\r\n\r\n\r\nclass Dialogs extends React.Component {\r\n    render() {\r\n\r\n        let dialogItems =\r\n            this.props.dialogPage.dialogUsers.map(u => (<DialogItems name={u.name} id={u.id}/>))\r\n\r\n\r\n        let dialogsMessage =\r\n            this.props.dialogPage.messageText.map(m => (<DialogsMessage id={m.id} text={m.text}/>))\r\n\r\n\r\n        return (\r\n            <div className={d.dialogs}>\r\n                <div className={d.d1}>\r\n                    {dialogItems}\r\n                    <NewMessageContainer/>\r\n                </div>\r\n                <div className={d.d2}>\r\n                    {dialogsMessage}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// const Dialogs = (props) => {\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//     let dialogItems =\r\n//         props.dialogPage.dialogUsers.map( u => (<DialogItems name={u.name} id={u.id} />))\r\n//\r\n//\r\n//     let dialogsMessage=\r\n//         props.dialogPage.messageText.map(m =>(<DialogsMessage id={m.id} text={m.text}/>))\r\n//\r\n//\r\n//     return (\r\n//         <div className={d.dialogs}>\r\n//             <div className={d.d1}>\r\n//             { dialogItems }\r\n//                 <NewMessageContainer />\r\n//             </div>\r\n//             <div className={d.d2}>\r\n//             { dialogsMessage }\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogPage: state.dialogReducer\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose (connect (mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)"],"names":["props","className","d2","to","id","name","dm","text","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","values","sendMessage","newMessageBody","connect","state","messageBody","dialogReducer","dispatch","addMessageAC","NewMessage","Dialogs","dialogItems","this","dialogPage","dialogUsers","map","u","dialogsMessage","messageText","m","d","React","compose","withAuthRedirect"],"sourceRoot":""}