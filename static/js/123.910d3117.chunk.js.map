{"version":3,"file":"static/js/123.910d3117.chunk.js","mappings":"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","sources":["App-components/Content/Profile/Profile.module.css","App-components/Content/Profile/MyPosts/NewPost/NewPost.jsx","App-components/Content/Profile/MyPosts/NewPost/NewPostContainer.jsx","webpack://samurai/./src/App-components/Content/Profile/MyPosts/Post/Post.module.css?fcfb","App-components/Content/Profile/MyPosts/Post/Post.jsx","App-components/Content/Profile/MyPosts/MyPosts.jsx","App-components/Content/Profile/MyPosts/MyPostsContainer.jsx","App-components/Content/Profile/ProfileStatusWithHooks.jsx","App-components/Content/Profile/Profile.jsx","App-components/Content/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../../Utils/validation/validator\";\r\nimport {Textarea} from \"../../../../../Media/FormControls/FormControls\";\r\n\r\n\r\nlet maxLength = maxLengthCreator(10);\r\nconst NewPost = (props) =>{\r\n    // let newPostElement = React.createRef();\r\n    //\r\n    //\r\n    //\r\n    //\r\n    // let sendPost = () =>{\r\n    //     props.sendPost()\r\n    // }\r\n    //\r\n    //\r\n    // let postOnChange = () => {\r\n    //     let newText = newPostElement.current.value\r\n    //     props.postOnChange(newText)\r\n    // }\r\n\r\n    let addP = (values) => {\r\n        props.sendPost(values.newPostBody)\r\n    }\r\n\r\n    return(\r\n        <div className='NewPost'>\r\n            <AddPostFormRedux onSubmit={addP}/>\r\n            {/*<textarea onChange={ postOnChange }  ref={newPostElement}*/}\r\n            {/*          value={props.postTextArea} />*/}\r\n            {/*<button onClick={ sendPost }> Send </button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst addNewPost = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostBody'\r\n                placeholder='Write new post' validate={ [required, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button> Post </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form:'profileAddPostForm'})(addNewPost)\r\n\r\n\r\nexport default NewPost;","import React from \"react\";\r\nimport NewPost from \"./NewPost\";\r\nimport {addPostActionCreator} from \"../../../../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//\r\n// const NewPostContainer = (props) =>{\r\n//\r\n//\r\n//     let sendPost = () =>{\r\n//         props.dispatch(addPostActionCreator())\r\n//     }\r\n//\r\n//     let postOnChange = (newText) => {\r\n//         props.dispatch(updatePostArea(newText))\r\n//     }\r\n//\r\n//\r\n//     return(<NewPost updatePostArea={postOnChange}  sendPost={sendPost}\r\n//                     postTextArea={props.postTextArea} />)\r\n// }\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        postTextArea: state.profileReducer.postTextArea\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        sendPost: (newPostBody) =>{\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost)\r\n\r\n\r\n\r\nexport default NewPostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"avatarUser\":\"Post_avatarUser__T+xBP\"};","import React from \"react\";\r\nimport p from './Post.module.css'\r\n\r\n\r\nconst Post = (props) =>{\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className={p.avatarUser}>\r\n                <img src={props.avatar} alt=\"\"/>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div className=\"textUser\">\r\n                {props.text}\r\n            </div>\r\n            <div>\r\n                <button onClick={() => {props.deletePost(props.id)}}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\r\n\r\n    let postElement =\r\n        [...props.posts].reverse().map(p => (<Post id={p.id} name={p.name} props={props} likescount={p.likescount} text={p.text}\r\navatar={p.avatar}/>))\r\n\r\n\r\n    return (\r\n        <div className='MyPosts'>\r\n            { postElement }\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {deletePost} from \"../../../../Redux/profile-reducer\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state.profileReducer.posts\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, deletePost )(MyPosts)\r\n\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    // let  stateTestHook = useState(false)\r\n    // let editMode = stateTestHook[0];\r\n    // let setEditMode = stateTestHook[1] обьяснение хука\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () =>{\r\n        setStatus(props.status)\r\n    },[props.status] )\r\n\r\n    const activateStatus = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateStatus = () => {\r\n        setEditMode(false)\r\n        props.updateProfileStatus(status)\r\n    }\r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ activateStatus }>{props.status || '====='}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={ onStatusChange} onBlur={ deactivateStatus} autoFocus={true} value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport p from './Profile.module.css'\r\nimport NewPostContainer from \"./MyPosts/NewPost/NewPostContainer\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../../../Media/Preloader/Preloader\";\r\nimport { NavLink} from \"react-router-dom\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={p.profile}>\r\n            <div className={p.wallImg}>\r\n                <img src={props.profile.photos.large ||\r\n                \"https://www.meme-arsenal.com/memes/d464970c6ee0c1f2b838780e5f635a34.jpg\"} />\r\n            </div>\r\n            <ProfileStatusWithHooks status={props.status} updateProfileStatus={props.updateProfileStatus}/>\r\n            <div className={p.profileInfo}>\r\n                <div className=\"wall-img\">\r\n                    <img src=\"\" alt=\"\"/>\r\n                </div>\r\n                <div className={p.profInf}>\r\n                    <div className={p.avatar}>\r\n                        <img src=\"\" alt=\"\"/>\r\n                    </div>\r\n                    <div className={p.info}>\r\n                        <div className={p.name}>\r\n                            <h1>\r\n                                {props.profile.fullName || 'Syka'}\r\n                            </h1>\r\n                        </div>\r\n                        <div className={p.userInformation}>\r\n                           <span>\r\n                               Статус: {props.profile.aboutMe || 'Pedik'}\r\n                           </span>\r\n                            <div>\r\n                                <div>\r\n                                    <NavLink to={props.profile.contacts.instagram || 'poxyi'}>\r\n                                        <h3>\r\n                                            inst\r\n                                        </h3>\r\n                                    </NavLink>\r\n                                    <a to={props.profile.contacts.twitter || 'poxyi'}>\r\n                                        <h3>\r\n                                            twitter\r\n                                        </h3>\r\n                                    </a>\r\n                                    <NavLink to={props.profile.contacts.vk || 'poxyi'}>\r\n                                        <h3>\r\n                                            vk\r\n                                        </h3>false &&\r\n                                        {/*<div>*/}\r\n                                        {/*    <span onDoubleClick={ this.activateStatus } >{this.props.status || '====='}</span>*/}\r\n                                        {/*</div>*/}\r\n                                    </NavLink>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <NewPostContainer/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getProfileStatus, updateProfileStatus} from \"../../../Redux/profile-reducer\";\r\nimport {useMatch} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match ? this.props.match.params.userId : this.props.initializedId;\r\n        if (!userId){\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getProfileStatus(userId)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                         updateProfileStatus={this.props.updateProfileStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProfileURLMatch = (props) => {\r\n    const match = useMatch('/profile/:userId/');\r\n    return <ProfileRedirectComponent {...props} match={match} />;\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    isAuth: state.loginReducer.isAuth,\r\n    initializedId: state.profileReducer.userId\r\n})\r\n\r\nlet ProfileRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n\r\n\r\nexport default compose( connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus }))(ProfileURLMatch)\r\n\r\n// export default connect(mapStateToProps, { getProfile })(ProfileURLMatch)"],"names":["maxLength","maxLengthCreator","AddPostFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","className","values","sendPost","newPostBody","connect","state","postTextArea","profileReducer","dispatch","addPostActionCreator","NewPost","p","src","avatar","alt","text","onClick","deletePost","id","React","postElement","posts","reverse","map","likescount","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateProfileStatus","autoFocus","profile","photos","large","fullName","aboutMe","to","contacts","instagram","twitter","vk","Preloader","ProfileContainer","userId","this","match","params","initializedId","history","push","getProfile","getProfileStatus","ProfileRedirectComponent","withAuthRedirect","compose","isAuth","loginReducer","useMatch"],"sourceRoot":""}